Maui 3.2.6p21

  Features

  - Implemented FSSECONDARYGROUPS to map unix groups to fair share groups. Contributed by Bas van der Vlies (SARA).
  - Implemented IGNPBSGROUPLIST to ignore 'qsub -W group_list=<value>'. Contributed by Bas van der Vlies (SARA).
  - Note for FSSECONDARYGROUPS and IGNPBSGROUPLIST:
    {{{ 
      Maui did not parse the PBS group_list parameter:
        qsub -W group_list=<value>

      This variable has the highest priority and will set the group credential to
        the value specified. We at SARA want to ignore this parameter, because we
      do not want an user to specify its own group and bypass the FairShare
      targets. So we added an option to ignore this parameter:
        - IGNPBSGROUPLIST          TRUE

      This patch also fix some debug problems that i had when the debug level is
      set to another value then the default one, eg:
        - LOGLEVEL 9

      Maui has a lot of keywords and the parsing of the keywords are only be
      shown if a certain loglevel is set. Somebody thought it is nice that the
      maui keyword table is sorted alphabetically. This is not correct because
      now only the keywords after the LOG... definitions are shown. This patch
      moves the LOG.. keywords definition to the beginning of keyword table and
      fix this problem.
    }}}

  - Implemented fitting of jobs into available partitions. Contributed by Eygene Ryabinkin, Russian Research Centre "Kurchatov Institute".
    ex. USERCFG[user] PLIST=par1,par2,par3 PDEF=par2 user's job will firt try to be fit in par2. If par2 doesn't work then par1 and par3 will be tried. 

Maui 3.2.6p20
  - Fixed a potential security issue when Maui is used with some PBS configurations.
  - Fixed a bug pertaining to Maui's resource policy ExtendedViolation time (thanks goes to Nick Sonneveld).
  - Fixed a bug with generic consumable floating resources which prevented them from working when a job also requested a 'mem' resource (thanks to Jeffrey Reed for the fix).
  - Fixed typos in MPBSI.c that may have caused undesirable side-effects (thanks to Jeffrey Reed for the fix).
  - Fixed a bug where group fairshare components were being miscalculated when percent based fairshare is enabled (thanks goes to Steve Traylen for the fix).

Maui 3.2.6p19

  - Implemented fixes for a segfault, FSPOLICY loading, and workload traces submitted by Ake Sandgren
  - Implemented patch in MJobProcessExtensionString to avoid dropping first token (from Peter Gardfj√§ll)
  - Added SUSE service startup script (suse.maui.d) to "contrib" directory (thanks goes to Stephen Cary)

Maui 3.2.6p18

  - Implemented NODEALLOCMAXPS patch from Bas van der Vlies
  - Implemented minor bug patch from Ake Sandgren
  - Implemented NODECFG[] MAXPROC[CLASS] patch from Yaroslav Halchenko

Maui 3.2.6p16

  - Maui's 'configure' script now compatible with latest TORQUE versions

Maui 3.2.6p15

  - Various enhancements and bug fixes

Maui 3.2.6p14

  Features

  - Corrected logging in earliest start time evaluation handling 
  - Fixed buffer overflow in mdiag -p
  - Fixed bug with floating generic resource tracking
  - Added support for NODEMEMOVERCOMMITFACTOR on TORQUE
  - Integrated latest DOE S3 communications library
  - Cleaned up showconfig output
  - Corrected multiple memory errors
  - Fixed security initialization
  - Fixed feature based reservation checkpoint recovery
  - Improved command line arg handling
 
Maui 3.2.6p11

  Scalability

  - Added client data compression

  Inter-operability

  - Added support for SSS 3.0.3 job structure
  - Added support for SSS suspend-resume features
  - Support PBS 'state-unknown' mapping
  - Improved TORQUE 'status' attribute auto-detection

  Security

  - Added client data encryption
  - Added client bounds checking to prevent buffer overflow 
  - Enhanced group ID mapping support

  Features

  - Added scheduler-level config based node feature specification
  - Enabled Dynamic Hostlist Modification
  - Enabled AM Job Failure Action Support
  - Added support for class/queue level feature requirement defaults
  - Added support for dedicated resource specification w/in standing reservations

  Fault Tolerance

  - Fixed TORQUE server data auto-detect
  - Fixed data corruption server crash
  - Improved logic for stale job handling with failing resource managers

  Useability

  - Improved Node State Diagnostics

  Accounting


